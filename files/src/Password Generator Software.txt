/**
 * Password Generator Software includes
 * -Generator
 * -Strength Checker
 * -Guidelines for Strong Password
 * -Help Centre in Guidelines 3rd page
 * BY ATHARVA RAJ SINHA, contact us: coderzzzrashhh@gmail.com
 */
import java.io.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.awt.datatransfer.*;
class PasswordGenerator
{
    static Scanner sc = new Scanner(System.in);
    static String file;
    static Image icon;
    static String upper = "ABCDEFGHIJKLMNPQRTUVWXYZ";
    static String lower = "abcdefghijkmnpqrstuvwxyz";
    static String digit = "123456789";
    static String schar = "!@#$%^&*()-_=+\\/~?";
    
    JFrame f,f1,f2,f3,f4,f5;
    JLabel l,l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l20,l21,l22,l23,l24,l25,l26,l27,l28;
    JLabel l29,l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l40,l41,l42,l43,l44,l45,l46,l47,l48,l49,l50,l51,l52,l53,l54,l55,l56;
    JTextField t,t1,t2;
    JButton b,b1,b2,b3,b4,b5,b6,b7,b8;
    JSpinner js1,js2,js3,js4,js5;
    JFormattedTextField tf1,tf2,tf3,tf4,tf5;
    JCheckBox cb1,cb2,cb3,cb4;
    JRadioButton rb1,rb2;
    ButtonGroup bg;

    String check1="unchecked",check2="unchecked",check3="unchecked",check4="unchecked";
    int c1=1, c2=1, c3=1, c4=1, ul=0, ll=0, nl=0, sl=0, val1, val2, val3, val4, score=0;
    int i, j;
    boolean hasUpper=false, hasLower=false, hasDigit=false, hasSChar=false;
    void FileInput()
    {
        file = JOptionPane.showInputDialog(null,"Enter the Files Location","Password Generator Software",3)+"\\";
        icon = Toolkit.getDefaultToolkit().getImage(file+"Icons\\logo.png");
        Main();
    }
    void Main()
    {
        f = new JFrame("Password Generator Software");
        
        l = new JLabel(new ImageIcon(file+"Icons\\head.jpg"));
        l.setBounds(0,0,700,140);
        
        b = new JButton("Generator");
        b.setBounds(50,200,160,40);
        b.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b.setToolTipText("Generator");
        b.setFont(new Font("Times New Roman",Font.BOLD,18));
        b.setForeground(new Color(255,255,255));
        b.setBackground(new Color(51,153,255));
        b.setFocusPainted(false);
        b.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                try
                {
                    Thread.sleep(100);
                    Generator();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
        
        b1 = new JButton("Strength Check");
        b1.setBounds(265,200,160,40);
        b1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b1.setToolTipText("Strength Check");
        b1.setFont(new Font("Times New Roman",Font.BOLD,18));
        b1.setForeground(new Color(255,255,255));
        b1.setBackground(new Color(51,153,255));
        b1.setFocusPainted(false);
        b1.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                try
                {
                    Thread.sleep(100);
                    Strength();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
        
        b2 = new JButton("Guidelines");
        b2.setBounds(484,200,160,40);
        b2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b2.setToolTipText("Guidelines");
        b2.setFont(new Font("Times New Roman",Font.BOLD,18));
        b2.setForeground(new Color(255,255,255));
        b2.setBackground(new Color(51,153,255));
        b2.setFocusPainted(false);
        b2.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                try
                {
                    Thread.sleep(100);
                    Page1();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
        
        f.add(l);
        f.add(b);
        f.add(b1);
        f.add(b2);
        
        f.setIconImage(icon);
        f.getContentPane().setBackground(new Color(204,204,204));
        f.setResizable(false);
        f.setSize(706,340);
        f.setLocationRelativeTo(null);
        f.setLayout(null);
        f.setVisible(true);
        f.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent w)
            {
                int result = JOptionPane.showConfirmDialog(null, "Are you sure to exit?", "Password Generator Software", JOptionPane.YES_NO_OPTION, 2);
                if(result==0)
                {
                    f.dispose();
                    System.exit(0);
                }
                else
                {
                    f.dispose();
                    Main();
                }
            }
        });
    }
    void Generator()
    {
        f1 = new JFrame("Password Generator");
        
        l = new JLabel(new ImageIcon(file+"Icons\\head.jpg"));
        l.setBounds(0,0,700,140);
        
        rb1 = new JRadioButton("Default Character Length");
        rb1.setBounds(170,150,180,25);
        rb1.setBackground(new Color(204,204,204));
        rb1.setFocusPainted(false);
        rb1.setSelected(true);
        rb1.setToolTipText("Default");
        
        rb2 = new JRadioButton("Custom Character Length");
        rb2.setBounds(360,150,200,25);
        rb2.setBackground(new Color(204,204,204));
        rb2.setFocusPainted(false);
        rb2.setToolTipText("Custom");
        
        bg = new ButtonGroup();
        bg.add(rb1);
        bg.add(rb2);
        
        cb1 = new JCheckBox("UpperCase (A-Z)");
        cb1.setBounds(220,185,150,25);
        cb1.setBackground(new Color(204,204,204));
        cb1.setFocusPainted(false);
        
        js1 = new JSpinner(new SpinnerNumberModel(0,0,128,1));
        js1.setToolTipText("UpperCase");
        js1.setBounds(407,185,68,22);
        js1.setEnabled(false);
        tf1 = ((JSpinner.DefaultEditor)js1.getEditor()).getTextField();
        tf1.setEditable(false);
        js1.addChangeListener(new ChangeListener() 
        {  
            public void stateChanged(ChangeEvent e)
            {
                val1 = (int)((JSpinner)e.getSource()).getValue();
            }  
        });
        
        cb1.addItemListener(new ItemListener()
        {
            public void itemStateChanged(ItemEvent e)
            {
                check1 = e.getStateChange()==1?"checked":"unchecked";
                if(check1.equals("checked") && rb2.isSelected())
                {
                    js1.setEnabled(true);
                    c1 = 0;
                }
                else
                {
                    js1.setEnabled(false);
                    c1 = 0;
                }
            }
        });
        
        cb2 = new JCheckBox("LowerCase (a-z)");
        cb2.setBounds(220,215,150,25);
        cb2.setBackground(new Color(204,204,204));
        cb2.setFocusPainted(false);
        
        js2 = new JSpinner(new SpinnerNumberModel(0,0,128,1));
        js2.setToolTipText("LowerCase");
        js2.setBounds(407,215,68,22);
        js2.setEnabled(false);
        tf2 = ((JSpinner.DefaultEditor)js2.getEditor()).getTextField();
        tf2.setEditable(false);
        js2.addChangeListener(new ChangeListener() 
        {  
            public void stateChanged(ChangeEvent e)
            {  
                val2 = (int)((JSpinner)e.getSource()).getValue();
            }  
        });
             
        cb2.addItemListener(new ItemListener()
        {
            public void itemStateChanged(ItemEvent e)
            {
                check2 = e.getStateChange()==1?"checked":"unchecked";
                if(check2.equals("checked") && rb2.isSelected())
                {
                    js2.setEnabled(true);
                    c2 = 0;
                }
                else
                {
                    js2.setEnabled(false);
                    c2 = 0;
                }
            }
        });
        
        cb3 = new JCheckBox("Numbers (0-9)");
        cb3.setBounds(220,245,150,25);
        cb3.setBackground(new Color(204,204,204));
        cb3.setFocusPainted(false);
        
        js3 = new JSpinner(new SpinnerNumberModel(0,0,128,1));
        js3.setToolTipText("Numbers");
        js3.setBounds(407,245,68,22);
        js3.setEnabled(false);
        tf3 = ((JSpinner.DefaultEditor)js3.getEditor()).getTextField();
        tf3.setEditable(false);
        js3.addChangeListener(new ChangeListener() 
        {  
            public void stateChanged(ChangeEvent e)
            {  
                val3 = (int)((JSpinner)e.getSource()).getValue();
            }  
        });
        
        cb3.addItemListener(new ItemListener()
        {
            public void itemStateChanged(ItemEvent e)
            {
                check3 = e.getStateChange()==1?"checked":"unchecked";
                if(check3.equals("checked") && rb2.isSelected())
                {
                    js3.setEnabled(true);
                    c3 = 0;
                }
                else
                {
                    js3.setEnabled(false);
                    c3 = 0;
                }
            }
        });
        
        cb4 = new JCheckBox("Symbols (!,@,#,...)");
        cb4.setBounds(220,275,150,25);
        cb4.setBackground(new Color(204,204,204));
        cb4.setFocusPainted(false);
        
        js4 = new JSpinner(new SpinnerNumberModel(0,0,128,1));
        js4.setToolTipText("Symbols");
        js4.setBounds(407,275,68,22);
        js4.setEnabled(false);
        tf4 = ((JSpinner.DefaultEditor)js4.getEditor()).getTextField();
        tf4.setEditable(false);
        js4.addChangeListener(new ChangeListener() 
        {  
            public void stateChanged(ChangeEvent e)
            {  
                val4 = (int)((JSpinner)e.getSource()).getValue();
            }  
        });
        
        cb4.addItemListener(new ItemListener()
        {
            public void itemStateChanged(ItemEvent e)
            {
                check4 = e.getStateChange()==1?"checked":"unchecked";
                if(check4.equals("checked") && rb2.isSelected())
                {
                    js4.setEnabled(true);
                    c4 = 0;
                }
                else
                {
                    js4.setEnabled(false);
                    c4 = 0;
                }
            }
        });
        
        l1 = new JLabel("Password");
        l1.setBounds(225,320,100,30);
        
        t = new JTextField();
        t.setBounds(290,325,160,20);
        t.setHorizontalAlignment(JTextField.CENTER);
        t.setEditable(false);
        t.setToolTipText("Generated Password");
        
        b3 = new JButton(new ImageIcon(file+"Icons\\copy.png"));
        b3.setBounds(450,323,25,24);
        b3.setToolTipText("Copy");
        b3.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                String str = t.getText();
                Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();
                StringSelection cp = new StringSelection(str);
                clip.setContents(cp,cp);
            }
        });
        
        rb1.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent  e)
            {
                if(rb1.isSelected())
                {
                    js1.setEnabled(false);
                    js2.setEnabled(false);
                    js3.setEnabled(false);
                    js4.setEnabled(false);
                }
            }
        });
        
        rb2.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent  e)
            {
                if(rb2.isSelected() && check1=="checked")
                {
                    js1.setEnabled(true);
                }
                else
                {
                    js1.setEnabled(false);
                }
                if(rb2.isSelected() && check2=="checked")
                {
                    js2.setEnabled(true);
                }
                else
                {
                    js2.setEnabled(false);
                }
                if(rb2.isSelected() && check3=="checked")
                {
                    js3.setEnabled(true);
                }
                else
                {
                    js3.setEnabled(false);
                }
                if(rb2.isSelected() && check4=="checked")
                {
                    js4.setEnabled(true);
                }
                else
                {
                    js4.setEnabled(false);
                }
            }
        });
        
        b4 = new JButton(new ImageIcon(file+"Icons\\generate.png"));
        b4.setBounds(268,370,165,55);
        b4.setToolTipText("Generate");
        b4.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                if(rb1.isSelected())
                {
                    if(c1==0 && c2==1 && c3==1 && c4==1)
                    {
                        ul = 12;
                    }
                    else if(c1==1 && c2==0 && c3==1 && c4==1)
                    {
                        ll = 12;
                    }
                    else if(c1==1 && c2==1 && c3==0 && c4==1)
                    {
                        nl = 12;
                    }
                    else if(c1==1 && c2==1 && c3==1 && c4==0)
                    {
                        sl = 12;
                    }
                    else if(c1==0 && c2==0 && c3==1 && c4==1)
                    {
                        ul = 5;
                        ll = 7;
                    }
                    else if(c1==0 && c2==1 && c3==0 && c4==1)
                    {
                        ul = 5;
                        nl = 7;
                    }
                    else if(c1==0 && c2==1 && c3==1 && c4==0)
                    {
                        ul = 5;
                        sl = 7;
                    }
                    else if(c1==1 && c2==0 && c3==0 && c4==1)
                    {
                        ll = 6;
                        nl = 6;
                    }
                    else if(c1==1 && c2==0 && c3==1 && c4==0)
                    {
                        ll = 5;
                        sl = 7;
                    }
                    else if(c1==1 && c2==1 && c3==0 && c4==0)
                    {
                        nl = 5;
                        sl = 7;
                    }
                    else if(c1==0 && c2==0 && c3==0 && c4==1)
                    {
                        ul = 3;
                        ll = 5;
                        nl = 4;
                    }
                    else if(c1==0 && c2==0 && c3==1 && c4==0)
                    {
                        ul = 3;
                        ll = 5;
                        sl = 4;
                    }
                    else if(c1==0 && c2==1 && c3==0 && c4==0)
                    {
                        ul = 5;
                        nl = 4;
                        sl = 3;
                    }
                    else if(c1==1 && c2==0 && c3==0 && c4==0)
                    {
                        ll = 5;
                        nl = 7;
                        sl = 3;
                    }
                    else if(c1==0 && c2==0 && c3==0 && c4==0)
                    {
                        ul = 2;
                        ll = 4;
                        nl = 5;
                        sl = 1;
                    }
                    else if(c1==1 && c2==1 && c3==1 && c4==1)
                    {
                        JOptionPane.showMessageDialog(null,"You have to select at least one checkbox","Error",2);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"ERROR","Error",2);
                    }
                    t.setText(Password(ul,ll,nl,sl));
                }
                else
                {
                    if(c1==1 && c2==1 && c3==1 && c4==1)
                    {
                        JOptionPane.showMessageDialog(null,"You have to select at least one checkbox","Error",2);
                    }
                    else if((val1+val2+val3+val4)>=8)
                    {
                        ul = val1;
                        ll = val2;
                        nl = val3;
                        sl = val4;
                        t.setText(Password(ul,ll,nl,sl));
                    }
                    else if((val1+val2+val3+val4)<=8)
                    {
                        JOptionPane.showMessageDialog(null,"Too Short","Error",2);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"ERROR","Error",2);
                    }
                }
                
                cb1.setSelected(false);
                cb2.setSelected(false);
                cb3.setSelected(false);
                cb4.setSelected(false);
                
                ul=ll=nl=sl=0;
                c1=c2=c3=c4=1;
                
                tf1.setText("0");
                tf2.setText("0");
                tf3.setText("0");
                tf4.setText("0");
            }
        });
        
        f1.add(l);
        f1.add(rb1);
        f1.add(rb2);
        f1.add(cb1);
        f1.add(js1);
        f1.add(cb2);
        f1.add(js2);
        f1.add(cb3);
        f1.add(js3);
        f1.add(cb4);
        f1.add(js4);
        f1.add(l1);
        f1.add(t);
        f1.add(b3);
        f1.add(b4);
        
        f1.setIconImage(icon);
        f1.getContentPane().setBackground(new Color(204,204,204));
        f1.setResizable(false);
        f1.setSize(706,480);
        f1.setLocationRelativeTo(null);
        f1.setLayout(null);
        f1.setVisible(true);
        f1.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent w)
            {
                f1.dispose();
                try
                {
                    Thread.sleep(100);
                    Main();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
    }
    String Password(int ul, int ll, int nl, int sl)
    {
        StringBuilder pass = new StringBuilder("");
        
        for(i=0; i<ul; i++)
        {
            int index = (int)(Math.random()*(upper.length()));
            pass.append(upper.charAt(index));
        }
        
        for(i=0; i<sl; i++)
        {
            int index = (int)(Math.random()*(schar.length()));
            pass.append(schar.charAt(index));
        }
        
        for(i=0; i<nl; i++)
        {
            int index = (int)(Math.random()*(digit.length()));
            pass.append(digit.charAt(index));
        }
        
        for(i=0; i<ll; i++)
        {
            int index = (int)(Math.random()*(lower.length()));
            pass.append(lower.charAt(index));
        }
        
        String p = pass.toString();
        String p1="", p2="";
        
        for(i=0; i<p.length(); i++)
        {
            if(i%2==0)
                p1=p1+p.charAt(i);
            else
                p2=p2+p.charAt(i);
        }
        
        return (p1+""+p2);
    }
    void Strength()
    {
        f2 = new JFrame("Password Strength Checker");
        
        l = new JLabel(new ImageIcon(file+"Icons\\head.jpg"));
        l.setBounds(0,0,700,140);
        
        l2 = new JLabel("Password");
        l2.setBounds(210,170,200,25);
        
        t1 = new JTextField();
        t1.setBounds(305,170,185,25);
        t1.setHorizontalAlignment(JTextField.CENTER);
        t1.setToolTipText("Enter your password");
        
        b6 = new JButton(new ImageIcon(file+"Icons\\reset.png"));
        b6.setBounds(490,170,24,24);
        b6.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b6.setFocusPainted(false);
        b6.setToolTipText("Reset Button");
        
        l3 = new JLabel("Strength");
        l3.setBounds(210,290,150,25);
        
        t2 = new JTextField();
        t2.setBounds(305,290,186,25);
        t2.setHorizontalAlignment(JTextField.CENTER);
        t2.setEditable(false);
        t2.setToolTipText("Strength of your password");
        
        b5 = new JButton("check");
        b5.setBounds(268,210,165,55);
        b5.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b5.setFont(new Font("Comic Sans MS",Font.BOLD,26));
        b5.setFocusPainted(false);
        b5.setForeground(new Color(0,0,0));
        b5.setBackground(new Color(153,153,153));
        b5.setToolTipText("Check for Strength");
        b5.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                String password = t1.getText();
                if(password.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Enter your password", "Error", 2);
                }
                else
                {
                    try
                    {
                        FileReader fr = new FileReader(file+"\\files\\common-passwords.txt");
                        BufferedReader br = new BufferedReader(fr);
                        String text="";
                        int f = 0;
                        while((text=br.readLine())!=null)
                        {
                            if(text.equals(password))
                            {
                                f = 1;
                                break;
                            }
                        }
                        br.close();
                        if(f==1)
                            JOptionPane.showMessageDialog(null, "Very Common Password!!!", "Password Strength Checker", 2);
                        else
                        {
                            t1.setEditable(false);
                            int score = Check(password);
                            if(score==7)
                                t2.setText("Highly Secured Password");
                            else if(score==6)
                                t2.setText("Very Strong");
                            else if(score==5)
                                t2.setText("Strong");
                            else if(score>2 && score<=4)
                                t2.setText("Moderate");
                            else if(score==2)
                                t2.setText("Weak");
                            else
                                t2.setText("Very Weak");
                        }
                    }
                    catch(Exception h)
                    {
                        JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                    }
                }
            }
        });
        
        b6.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                if((t1.getText()).equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Empty", "Error", 2);
                }
                else
                {                    
                    t1.setText("");
                    t1.setEditable(true);
                    t2.setText("");
                }
            }
        });
        
        f2.add(l);
        f2.add(l2);
        f2.add(t1);
        f2.add(b6);
        f2.add(b5);
        f2.add(l3);
        f2.add(t2);
        
        f2.setIconImage(icon);
        f2.getContentPane().setBackground(new Color(204,204,204));
        f2.setResizable(false);
        f2.setSize(706,370);
        f2.setLocationRelativeTo(null);
        f2.setLayout(null);
        f2.setVisible(true);
        f2.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent w)
            {
                f2.dispose();
                try
                {
                    Thread.sleep(100);
                    Main();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
    }
    int Check(String password)
    {
        score = 0;
        
        hasUpper=false;
        hasLower=false;
        hasDigit=false;
        hasSChar=false;
        
        int len = password.length();
        char ch;
        for(i=0; i<len; i++)
        {
            ch = password.charAt(i);
            if(ch>=65 && ch<=90)
                hasUpper = true;
            else if(ch>=97 && ch<=122)
                hasLower = true;
            else if(ch>=48 && ch<=57)
                hasDigit = true;
            else
                hasSChar = true;
        }
        
        if(hasUpper)
            score+=1;
        if(hasLower)
            score+=1;
        if(hasDigit)
            score+=1;
        if(hasSChar)
            score+=1;
        if((password.length())>=8)
            score+=1;
        if((password.length())>=12)
            score+=1;
        if((password.length())>=20)
            score+=1;
        
        return score;
    }
    void Page1()
    {
        f3 = new JFrame("Guidelines");
        
        l4 = new JLabel("Create Strong Passwords");
        l4.setBounds(10,5,500,30);
        l4.setFont(new Font("Arial",Font.BOLD,25));
        
        l5 = new JLabel("Password security starts with creating a strong password. A strong password is:");
        l5.setBounds(20,40,500,30);
        l5.setFont(new Font("Arial",Font.BOLD,12));
        
        l6 = new JLabel("1. At least 12 characters long but 14 or more is better.");
        l6.setBounds(30,70,500,30);
        l6.setFont(new Font("Arial",Font.BOLD,12));
        
        l7 = new JLabel("2. A combination of uppercase letters, lowercase letters, numbers, and symbols.");
        l7.setBounds(30,100,500,30);
        l7.setFont(new Font("Arial",Font.BOLD,12));
        
        l8 = new JLabel("3. Not a word that can be found in a dictionary or the name of a person,");
        l8.setBounds(30,130,500,30);
        l8.setFont(new Font("Arial",Font.BOLD,12));
        
        l9 = new JLabel("character, product, or organization.");
        l9.setBounds(43,145,500,30);
        l9.setFont(new Font("Arial",Font.BOLD,12));
        
        l10 = new JLabel("4. Significantly different from your previous passwords.");
        l10.setBounds(30,175,500,30);
        l10.setFont(new Font("Arial",Font.BOLD,12));
        
        l11 = new JLabel("5. Easy for you to remember but difficult for others to guess. Consider using a");
        l11.setBounds(30,205,500,30);
        l11.setFont(new Font("Arial",Font.BOLD,12));
        
        l12 = new JLabel("memorable phrase like '6MonkeysRLooking^'.");
        l12.setBounds(43,220,500,30);
        l12.setFont(new Font("Arial",Font.BOLD,12));
        
        l13 = new JLabel("Secure your Passwords");
        l13.setBounds(10,260,500,30);
        l13.setFont(new Font("Arial",Font.BOLD,25));
        
        l14 = new JLabel("Once you’ve created a strong password, follow these guidelines to keep it secure:");
        l14.setBounds(20,295,500,30);
        l14.setFont(new Font("Arial",Font.BOLD,12));
        
        l15 = new JLabel("1. Don’t share a password with anyone. Not even a friend or family member.");
        l15.setBounds(30,325,500,30);
        l15.setFont(new Font("Arial",Font.BOLD,12));
        
        l16 = new JLabel("2. Never send a password by email, instant message, or any other means of");
        l16.setBounds(30,355,500,30);
        l16.setFont(new Font("Arial",Font.BOLD,12));
        
        l17 = new JLabel("communication that is not reliably secure.");
        l17.setBounds(43,370,500,30);
        l17.setFont(new Font("Arial",Font.BOLD,12));
        
        b7 = new JButton(new ImageIcon(file+"Icons\\back.png"));
        b7.setBounds(22,410,98,40);
        b7.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b7.setFocusPainted(false);
        b7.setEnabled(false);
        b7.setToolTipText("Back");
        
        b8 = new JButton(new ImageIcon(file+"Icons\\next.png"));
        b8.setBounds(375,410,98,40);
        b8.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b8.setFocusPainted(false);
        b8.setToolTipText("Next");
        b8.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f3.dispose();
                try
                {
                    Thread.sleep(100);
                    Page2();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
        
        f3.add(l4);
        f3.add(l5);
        f3.add(l6);
        f3.add(l7);
        f3.add(l8);
        f3.add(l9);
        f3.add(l10);
        f3.add(l11);
        f3.add(l12);
        f3.add(l13);
        f3.add(l14);
        f3.add(l15);
        f3.add(l16);
        f3.add(l17);
        f3.add(b7);
        f3.add(b8);
        
        f3.setIconImage(icon);
        f3.getContentPane().setBackground(new Color(204,204,204));
        f3.setResizable(false);
        f3.setSize(500,500);
        f3.setLocationRelativeTo(null);
        f3.setLayout(null);
        f3.setVisible(true);
        f3.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent w)
            {
                f3.dispose();
                Main();
            }
        });
    }
    void Page2()
    {
        f4 = new JFrame("Guidelines");
        
        l18 = new JLabel("3. Use a unique password for each website. If crooks steal your account");
        l18.setBounds(30,5,500,30);
        l18.setFont(new Font("Arial",Font.BOLD,12));
        
        l19 = new JLabel("information from one site, they'll try to use those credentials on hundreds");
        l19.setBounds(43,20,500,30);
        l19.setFont(new Font("Arial",Font.BOLD,12));
        
        l20 = new JLabel("of other well-known websites, such as banking, social media, or online");
        l20.setBounds(43,35,500,30);
        l20.setFont(new Font("Arial",Font.BOLD,12));
        
        l21 = new JLabel("shopping, hoping you've reused the password elsewhere. That's called a");
        l21.setBounds(43,50,500,30);
        l21.setFont(new Font("Arial",Font.BOLD,12));
        
        l22 = new JLabel("'Credential stuffing attack' and it's extremely common.");
        l22.setBounds(43,65,500,30);
        l22.setFont(new Font("Arial",Font.BOLD,12));
        
        l23 = new JLabel("4. If you don’t want to memorize multiple passwords, consider using a password");
        l23.setBounds(30,95,500,30);
        l23.setFont(new Font("Arial",Font.BOLD,12));
        
        l24 = new JLabel("manager. The best password managers will automatically update stored");
        l24.setBounds(43,110,500,30);
        l24.setFont(new Font("Arial",Font.BOLD,12));
        
        l25 = new JLabel("passwords, keep them encrypted, and require multi-factor authentication");
        l25.setBounds(43,125,500,30);
        l25.setFont(new Font("Arial",Font.BOLD,12));
        
        l26 = new JLabel("for access. Microsoft Edge can remember your passwords for you and");
        l26.setBounds(43,140,500,30);
        l26.setFont(new Font("Arial",Font.BOLD,12));
        
        l27 = new JLabel("automatically fill them in for you when needed.");
        l27.setBounds(43,155,500,30);
        l27.setFont(new Font("Arial",Font.BOLD,12));
        
        l28 = new JLabel("5. It's ok to write your passwords down, as long as you keep them secure. Don't");
        l28.setBounds(30,185,500,30);
        l28.setFont(new Font("Arial",Font.BOLD,12));
        
        l29 = new JLabel("write them on sticky notes or cards that you keep near the thing the");
        l29.setBounds(43,200,500,30);
        l29.setFont(new Font("Arial",Font.BOLD,12));
        
        l30 = new JLabel("password protects, even if you think they're well-hidden.");
        l30.setBounds(43,215,500,30);
        l30.setFont(new Font("Arial",Font.BOLD,12));
        
        l31 = new JLabel("6. Change passwords immediately on accounts you suspect may have been");
        l31.setBounds(30,245,500,30);
        l31.setFont(new Font("Arial",Font.BOLD,12));
        
        l32 = new JLabel("compomised.");
        l32.setBounds(43,260,500,30);
        l32.setFont(new Font("Arial",Font.BOLD,12));
        
        l33 = new JLabel("7. Enable multifactor authentication (MFA) whenever available. MFA requires");
        l33.setBounds(30,290,500,30);
        l33.setFont(new Font("Arial",Font.BOLD,12));
        
        l34 = new JLabel("more than one kind of credential to sign into an account-such as requiring");
        l34.setBounds(43,305,500,30);
        l34.setFont(new Font("Arial",Font.BOLD,12));
        
        l35 = new JLabel("both a password and a one-time code generated by an app. This adds another");
        l35.setBounds(43,320,500,30);
        l35.setFont(new Font("Arial",Font.BOLD,12));
        
        l36 = new JLabel("layer of security in case someone guesses or steals your password.");
        l36.setBounds(43,335,500,30);
        l36.setFont(new Font("Arial",Font.BOLD,12));
        
        l37 = new JLabel("8. Make your password as secure as Fort Knox.");
        l37.setBounds(30,365,270,30);
        l37.setFont(new Font("Arial",Font.BOLD,12));
        
        b7 = new JButton(new ImageIcon(file+"Icons\\back.png"));
        b7.setBounds(22,410,98,40);
        b7.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b7.setFocusPainted(false);
        b7.setToolTipText("Back");
        b7.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f4.dispose();
                try
                {
                    Thread.sleep(100);
                    Page1();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
        
        b8 = new JButton(new ImageIcon(file+"Icons\\next.png"));
        b8.setBounds(375,410,98,40);
        b8.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b8.setFocusPainted(false);
        b8.setToolTipText("Next");
        b8.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f4.dispose();
                try
                {
                    Thread.sleep(100);
                    Page3();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
        
        f4.add(l18);
        f4.add(l19);
        f4.add(l20);
        f4.add(l21);
        f4.add(l22);
        f4.add(l23);
        f4.add(l24);
        f4.add(l25);
        f4.add(l26);
        f4.add(l27);
        f4.add(l28);
        f4.add(l29);
        f4.add(l30);
        f4.add(l31);
        f4.add(l32);
        f4.add(l33);
        f4.add(l34);
        f4.add(l35);
        f4.add(l36);
        f4.add(l37);
        f4.add(b7);
        f4.add(b8);
        
        f4.setIconImage(icon);
        f4.getContentPane().setBackground(new Color(204,204,204));
        f4.setResizable(false);
        f4.setSize(500,500);
        f4.setLocationRelativeTo(null);
        f4.setLayout(null);
        f4.setVisible(true);
        f4.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent w)
            {
                f4.dispose();
                Main();
            }
        });
    }
    void Page3()
    {
        f5 = new JFrame("Guidelines");
        
        l38 = new JLabel("Don’t be Tricked into Revealing your Passwords");
        l38.setBounds(10,5,500,30);
        l38.setFont(new Font("Arial",Font.BOLD,20));
        
        l39 = new JLabel("Criminals can try to break your password, but sometimes it’s easier to exploit");
        l39.setBounds(20,35,500,30);
        l39.setFont(new Font("Arial",Font.BOLD,12));
        
        l40 = new JLabel("human nature and trick you into revealing it.");
        l40.setBounds(20,50,500,30);
        l40.setFont(new Font("Arial",Font.BOLD,12));
        
        l41 = new JLabel("If you receive an email message that appears to be from an online store (like");
        l41.setBounds(20,80,500,30);
        l41.setFont(new Font("Arial",Font.BOLD,12));
        
        l42 = new JLabel("eBay or Amazon) or a phone call from your “bank” that tries to convince you of");
        l42.setBounds(20,95,500,30);
        l42.setFont(new Font("Arial",Font.BOLD,12));
        
        l43 = new JLabel("the “legitimate” need for your password or other sensitive information, it could");
        l43.setBounds(20,110,500,30);
        l43.setFont(new Font("Arial",Font.BOLD,12));
        
        l44 = new JLabel("be a phishing scam. (You may have heard these con games referred to as 'social");
        l44.setBounds(20,125,500,30);
        l44.setFont(new Font("Arial",Font.BOLD,12));
        
        l45 = new JLabel("engineering'.");
        l45.setBounds(20,140,500,30);
        l45.setFont(new Font("Arial",Font.BOLD,12));
        
        l46 = new JLabel("Here are some guidelines to follow to protect your passwords and other");
        l46.setBounds(20,170,500,30);
        l46.setFont(new Font("Arial",Font.BOLD,12));
        
        l47 = new JLabel("sensitive information:");
        l47.setBounds(20,185,500,30);
        l47.setFont(new Font("Arial",Font.BOLD,12));
        
        l48 = new JLabel("1. Be wary of anyone who is requesting sensitive info from you, even if it");
        l48.setBounds(30,215,500,30);
        l48.setFont(new Font("Arial",Font.BOLD,12));
        
        l49 = new JLabel("appears to be someone you know or a company you trust.");
        l49.setBounds(43,230,500,30);
        l49.setFont(new Font("Arial",Font.BOLD,12));
        
        l50 = new JLabel("2. Never share your password in response to an email or phone call.");
        l50.setBounds(30,260,500,30);
        l50.setFont(new Font("Arial",Font.BOLD,12));
        
        l51 = new JLabel("company or person.");
        l51.setBounds(43,275,500,30);
        l51.setFont(new Font("Arial",Font.BOLD,12));
        
        l52 = new JLabel("3. Always access websites using trusted links. Scammers can copy the look");
        l52.setBounds(30,305,500,30);
        l52.setFont(new Font("Arial",Font.BOLD,12));
        
        l53 = new JLabel("of a company’s communications to fool you into clicking a phony link or");
        l53.setBounds(43,320,500,30);
        l53.setFont(new Font("Arial",Font.BOLD,12));
        
        l54 = new JLabel("attachment, so use caution with links that appear in unsolicited emails,");
        l54.setBounds(43,335,500,30);
        l54.setFont(new Font("Arial",Font.BOLD,12));
        
        l55 = new JLabel("social media, or SMS messages.");
        l55.setBounds(43,350,500,30);
        l55.setFont(new Font("Arial",Font.BOLD,12));
        
        l56 = new JLabel("Thanks for Reading :D");
        l56.setBounds(320,375,500,30);
        l56.setFont(new Font("Arial",Font.BOLD,15));
        
        b7 = new JButton(new ImageIcon(file+"Icons\\back.png"));
        b7.setBounds(22,410,98,40);
        b7.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b7.setFocusPainted(false);
        b7.setToolTipText("Back");
        b7.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f5.dispose();
                try
                {
                    Thread.sleep(100);
                    Page2();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Error: "+h, "Error", 2);
                }
            }
        });
        
        b8 = new JButton("help");
        b8.setBounds(375,410,98,40);
        b8.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        b8.setFont(new Font("Comic Sans MS",Font.BOLD,15));
        b8.setForeground(new Color(0,0,0));
        b8.setBackground(new Color(153,153,153));
        b8.setFocusPainted(false);
        b8.setToolTipText("Help");
        b8.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "For Feedback write subject in mail as: Feedback #Password_Generator\n\nFor Another Help write subject in mail as: Help #Password_Generator\n\nIf any button photo is not shown than make sure that its all files\n is in C:\\Program Files with folder named Password Generator\n\nContact us: coderzzzrashhh@gmail.com", "Help Centre", 1); 
            }
        });
        
        f5.add(l38);
        f5.add(l39);
        f5.add(l40);
        f5.add(l41);
        f5.add(l42);
        f5.add(l43);
        f5.add(l44);
        f5.add(l45);
        f5.add(l46);
        f5.add(l47);
        f5.add(l48);
        f5.add(l49);
        f5.add(l50);
        f5.add(l51);
        f5.add(l52);
        f5.add(l53);
        f5.add(l54);
        f5.add(l55);
        f5.add(l56);
        f5.add(b7);
        f5.add(b8);
        
        f5.setIconImage(icon);
        f5.getContentPane().setBackground(new Color(204,204,204));
        f5.setResizable(false);
        f5.setSize(500,500);
        f5.setLocationRelativeTo(null);
        f5.setLayout(null);
        f5.setVisible(true);
        f5.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent w)
            {
                f5.dispose();
                Main();
            }
        });
    }
    public static void main(String args[])
    {
        PasswordGenerator ob = new PasswordGenerator();
        ob.FileInput();
    }
}
// Thank You